#!/usr/bin/env bash
# TripleSec File Wrapper
# This script wraps over triplesec (python), in order to encrypt and decrypt files, using the .triple extension.

# Colors
ESC_SEQ="\x1b["
COL_RESET=$ESC_SEQ"39;49;00m"
COL_RED=$ESC_SEQ"31;01m"
COL_GREEN=$ESC_SEQ"32;01m"
COL_YELLOW=$ESC_SEQ"33;01m"
COL_CYAN=$ESC_SEQ"36;01m"

MODE=$1
KEY=$2
FILE=$3
BASE=$(basename "$FILE" .triple)
EXT=$(echo "$FILE"|awk -F . '{print $NF}')
cat << "EOF"
___________      .__       .__           _________
\__    ___/______|__|_____ |  |   ____  /   _____/ ____   ____
  |    |  \_  __ \  \____ \|  | _/ __ \ \_____  \_/ __ \_/ ___\
  |    |   |  | \/  |  |_> >  |_\  ___/ /        \  ___/\  \___
  |____|   |__|  |__|   __/|____/\___  >_______  /\___  >\___  >
                    |__|             \/        \/     \/     \/

EOF
function command_exists () {
  type "$1" &> /dev/null ;
}
function _spinner() {
  # $1 start/stop
  #
  # on start: $2 display message
  # on stop : $2 process exit status
  #           $3 spinner function pid (supplied from stop_spinner)

  local on_success="DONE"
  local on_fail="FAIL"
  local green="\e[1;32m"
  local red="\e[1;31m"
  local nc="\e[0m"

  case $1 in
    start)
    # calculate the column where spinner and status msg will be displayed
    let column=$(tput cols)-${#2}-8
    # display message and position the cursor in $column column
    echo -ne "${2}"
    printf "%${column}s"

    # start spinner
    i=1
    sp='\|/-'
    delay=${SPINNER_DELAY:-0.15}

    while :
    do
      printf "\b${sp:i++%${#sp}:1}"
      sleep "$delay"
    done
    ;;
    stop)
    if [[ -z ${3} ]]; then
      echo "spinner is not running.."
      exit 1
    fi

    kill "$3" > /dev/null 2>&1

    # inform the user uppon success or failure
    echo -en "\b["
    if [[ $2 -eq 0 ]]; then
      echo -en "${green}${on_success}${nc}"
    else
      echo -en "${red}${on_fail}${nc}"
    fi
    echo -e "]"
    ;;
    *)
    echo "invalid argument, try {start/stop}"
    exit 1
    ;;
  esac
}

function start_spinner {
  # $1 : msg to display
  _spinner "start" "${1}" &
  # set global spinner pid
  _sp_pid=$!
  disown
}

function stop_spinner {
  # $1 : command exit status
  _spinner "stop" "$1" $_sp_pid
  unset _sp_pid
}

function encrypt
{
  start_spinner Encrypting file, please wait...
  ENCFILE="$FILE.triple"
  cat "$FILE" | triplesec -b enc -k $KEY > $ENCFILE
  stop_spinner $?
  echo -e "${COL_GREEN}Your encrypted file has been saved to ${COL_CYAN}$FILE.triple $COL_RESET"
}
function decrypt
{
  if [ "$EXT" == "triple" ];
  then
    start_spinner Decrypting file, please wait...
    cat "$FILE" | triplesec -b dec -k "$KEY" > "$BASE"
    stop_spinner $?
    echo -e "${COL_GREEN}Your decrypted file has been saved to ${COL_CYAN}$BASE. $COL_RESET"
  else
    echo -e "${COL_RED}The file doesn't have a .triple extension.s $COL_RESET"
  fi
}
if command_exists triplesec ;
then
  if [ -n "$MODE" ] && [ -n "$FILE" ] && [ -n "$KEY" ];
  then
    if [ "$MODE" == "enc" ];
    then
      encrypt
    elif [ "$MODE" == "dec" ] ;
    then
      decrypt
    else
      echo -e "${COL_YELLOW}Please specify a mode (enc or dec).$COL_RESET"
    fi
  else
    echo -e "${COL_RED}One or more arguments are missing, please check again $COL_RESET"
  fi
  history -c && history -w
else
  echo -e "${COL_RED}Triplesec doesn't seem to be installed, try installing it using ${COL_CYAN}pip install triplesec.$COL_RESET"
fi
